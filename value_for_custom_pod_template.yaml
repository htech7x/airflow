#################################
### Astronomer global configuration
#################################
global:
  # Base domain for all subdomains exposed through ingress
  baseDomain: base_domain.aws.astronomer-customer.io

  # Name of secret containing TLS certificate
  tlsSecret: astronomer-tls
  dagOnlyDeployment:
    enabled: true

  features:
    namespacePools:
      # if this is false, everything in this section can be ignored. default should be false
      enabled: true
      namespaces:
        # automatically creates namespace, role and rolebinding for commander if set to true
        create: true
        # this needs to be populated (something other than null) if global.features.namespacePools.enabled is true
        names:
          - green-team
          - blue-team
          - red-team
          - black-team
  # Enable privateCaCerts only if your enterprise security team
  # generated a certificate from a private certificate authority.
  # Create a generic secret for each cert, and add it to the list below.
  # Each secret must have a data entry for 'cert.pem'
  # Example command: `kubectl create secret generic private-root-ca --from-file=cert.pem=./<your-certificate-filepath>`
  # privateCaCerts:
  # - private-root-ca

  # Enable privateCaCertsAddToHost only when your nodes do not already
  # include the private CA in their docker trust store.
  # Most enterprises already have this configured,
  # and in that case 'enabled' should be false.
  # privateCaCertsAddToHost:
  #   enabled: true
  #   hostDirectory: /etc/docker/certs.d
  # For development or proof-of-concept, you can use an in-cluster database
  postgresqlEnabled: true

  # Enables using SSL connections to
  # encrypt client/server communication
  # between databases and the Astronomer platform.
  # If your database enforces SSL for connections,
  # change this value to true
  ssl:
    enabled: false
#################################
### Nginx configuration
#################################
nginx:
  # IP address the nginx ingress should bind to
  loadBalancerIP: ~
  #  Set to 'true' when deploying to a private EKS cluster
  privateLoadBalancer: false
  # Dict of arbitrary annotations to add to the nginx ingress. For full configuration options, see https://docs.nginx.com/nginx-ingress-controller/configuration/ingress-resources/advanced-configuration-with-annotations/
  ingressAnnotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb # Change to 'elb' if your node group is private and doesn't utilize a NAT gateway
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:xxxx
    
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ssl
    

#################################
### SMTP configuration
#################################

astronomer:
  houston:
    config:
      publicSignups: false # Users need to be invited to have access to Astronomer. Set to true otherwise
      emailConfirmation: false # Users get an email verification before accessing Astronomer
      deployments:
        hardDeleteDeployment: true
        configureDagDeployment: true
        gitSyncDagDeployment: true
        manualReleaseNames: true # Allows you to set your release names
        serviceAccountAnnotationKey: eks.amazonaws.com/role-arn # Flag to enable using IAM roles (don't enter a specific role)
        helm:                       # <--- htech7x add this section for podTemplate to change requests/limits for pod
          airflow:
            podTemplate: |
                # Licensed to the Apache Software Foundation (ASF) under one
                # or more contributor license agreements.  See the NOTICE file
                # distributed with this work for additional information
                # regarding copyright ownership.  The ASF licenses this file
                # to you under the Apache License, Version 2.0 (the
                # "License"); you may not use this file except in compliance
                # with the License.  You may obtain a copy of the License at
                #
                #   http://www.apache.org/licenses/LICENSE-2.0
                #
                # Unless required by applicable law or agreed to in writing,
                # software distributed under the License is distributed on an
                # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
                # KIND, either express or implied.  See the License for the
                # specific language governing permissions and limitations
                # under the License.
                ---
                {{- $nodeSelector := or .Values.nodeSelector .Values.workers.nodeSelector }}
                {{- $affinity := or .Values.affinity .Values.workers.affinity }}
                {{- $tolerations := or .Values.tolerations .Values.workers.tolerations }}
                apiVersion: v1
                kind: Pod
                metadata:
                  name: astronomer-pod-template-file
                  labels:
                    tier: airflow
                    component: worker
                    release: {{ .Release.Name }}
                {{- with .Values.labels }}
                {{ toYaml . | indent 4 }}
                {{- end }}
                  {{- if .Values.airflowPodAnnotations }}
                  annotations:
                  {{- toYaml .Values.airflowPodAnnotations | nindent 4 }}
                  {{- end }}
                spec:
                  {{- if or (and .Values.dags.gitSync.enabled (not .Values.dags.persistence.enabled)) .Values.workers.extraInitContainers }}
                  initContainers:
                    {{- if and .Values.dags.gitSync.enabled (not .Values.dags.persistence.enabled) }}
                    {{- include "git_sync_container" (dict "Values" .Values "is_init" "true") | nindent 4 }}
                    {{- end }}
                    {{- if .Values.workers.extraInitContainers }}
                    {{- toYaml .Values.workers.extraInitContainers | nindent 4 }}
                    {{- end }}
                  {{- end }}
                  containers:
                    - args: []
                      command: []
                      envFrom:
                      {{- include "custom_airflow_environment_from" . | default "\n  []" | indent 6 }}
                      env:
                        - name: AIRFLOW__CORE__EXECUTOR
                          value: LocalExecutor
                {{- include "standard_airflow_environment" . | indent 6}}
                {{- include "custom_airflow_environment" . | indent 6 }}
                      image: {{ template "pod_template_image" . }}
                      imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
                      name: base
                      ports: []
                      resources:             # <--- htech7x add this line   
                        requests:            # 
                          memory: 222Mi      #
                          cpu: 222m          #
                        limits:              #
                          memory: 333Mi      #
                          cpu: 444m          # <--- 
                      volumeMounts:
                        - mountPath: {{ template "airflow_logs" . }}
                          name: logs
                        - name: config
                          mountPath: {{ template "airflow_config_path" . }}
                          subPath: airflow.cfg
                          readOnly: true
                {{- if .Values.airflowLocalSettings }}
                        - name: config
                          mountPath: {{ template "airflow_local_setting_path" . }}
                          subPath: airflow_local_settings.py
                          readOnly: true
                {{- end }}
                {{- if or .Values.dags.gitSync.enabled .Values.dags.persistence.enabled }}
                        {{- include "airflow_dags_mount" . | nindent 8 }}
                {{- end }}
                {{- if .Values.workers.extraVolumeMounts }}
                {{ toYaml .Values.workers.extraVolumeMounts | indent 8 }}
                {{- end }}
                {{- if .Values.workers.extraContainers }}
                {{- toYaml .Values.workers.extraContainers | nindent 4 }}
                {{- end }}
                  hostNetwork: false
                  {{- if or .Values.registry.secretName .Values.registry.connection }}
                  imagePullSecrets:
                    - name: {{ template "registry_secret" . }}
                  {{- end }}
                  restartPolicy: Never
                  securityContext:
                    runAsUser: {{ .Values.uid }}
                    fsGroup: {{ .Values.gid }}
                  nodeSelector: {{ toYaml $nodeSelector | nindent 4 }}
                  affinity: {{ toYaml $affinity | nindent 4 }}
                  tolerations: {{ toYaml $tolerations | nindent 4 }}
                  serviceAccountName: {{ include "worker.serviceAccountName" . }}
                  volumes:
                  {{- if .Values.dags.persistence.enabled }}
                  - name: dags
                    persistentVolumeClaim:
                      claimName: {{ template "airflow_dags_volume_claim" . }}
                  {{- else if .Values.dags.gitSync.enabled }}
                  - name: dags
                    emptyDir: {}
                  {{- end }}
                  {{- if .Values.logs.persistence.enabled }}
                  - name: logs
                    persistentVolumeClaim:
                      claimName: {{ template "airflow_logs_volume_claim" . }}
                  {{- else }}
                  - emptyDir: {}
                    name: logs
                  {{- end }}
                  {{- if and .Values.dags.gitSync.enabled .Values.dags.gitSync.sshKeySecret }}
                  {{- include "git_sync_ssh_key_volume" . | nindent 2 }}
                  {{- end }}
                  - configMap:
                      name: {{ include "airflow_config" . }}
                    name: config
                  {{- if .Values.workers.extraVolumes }}
                  {{ toYaml .Values.workers.extraVolumes | nindent 2 }}
                  {{- end }}
      email:
        enabled: false
        reply: "noreply@astronomer.io" # Emails will be sent from this address
      auth:
        github:
          enabled: false # Lets users authenticate with Github
        local:
          enabled: false # Disables logging in with just a username and password
        openidConnect:
          google:
            enabled: true # Lets users authenticate with Google
